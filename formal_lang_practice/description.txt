14. Даны α и слово u ∈ {a, b, c}
Найти длину самого длинного суффикса u, принадлежащего L.

Будем поддерживать стек для обработки регулярного выражения. В стеке мы будем хранить матрицы,
где элемент [i][j] == true, если в данный момент мы можем уже прочитанным регулярным выражением принять слово u[i...j].
Походу считывания символов будем менять стек следующим образом:
1. Нам поступил символ (а-с) или "1".
В таком случае пробегаемся по слову и смотрим совпадения с нашей буквой. Если на i-ом месте в слове стоит буква, которую
мы считали в автомате, то значит, что мы можем считать u[i], пометим это в матрице и закинем в стек в конце.
Если нам поступила "1", значит мы можем сделать переход по эпсилону, или если сказать по другому в матрице это будет
[i][i] = true.
Далее перед всеми операциями будем проверять достаточно ли элементов в стеке для данной операции
2. Нам поступил "+"
В этом случае мы складываем матрицы, потому что нам теперь доступны переходы из обоих матриц.
3. Нам поступил "."
В этом случае мы смотрим часть строки, которую могли обработать вначале и ищем совпадения во второй матрице. Если они
есть помечаем это в итоговой матрице и идем дальше. На деле эта операция похожа на умножение
4. Нам поступил "*"
В этом случае мы по-сути повторяем умножение много раз, при этом добавляя пустые переходы(как при добавлении 1)
Теперь после того как мы полностью считали регулярное выражение, нам нужно посмотреть на позиции [i][длина слова],
начиная с i=0 и остановиться, когда найдем значение true. Ответом будет длина слова - i.
